Create Ghost module
Create a directory called ghost.
Your modules will be made up of three files: main.tf, variables.tf and outputs.tf.

main.tf
In main.tf you will deploy out two resources docker_image and docker_container. The docker_image resource name will be ghost_image.
The name will use the image_name variable.
The docker_container resource name will be ghost_container.
The name will be set using a varialbe called container_name. The image will be set usingdocker_image.ghost_image.latest. Set the external port to use the ext_port variable.

variables.tf
In variables.tf create three varialbes: image_name, container_name and ext_port.

outputs.tf
In outputs.tf create two outputs: ip and container_name. The ip output the ghost_container's ip_address attribute.
The container_name output the ghost_container's name attribute.

Create root module
main.tf
In cloud_user directory create main.tf, variables.tf and outputs.tf. In main.tf will use the ghost module.
Set image_name using a variable called image_name.
Set container_name using a variable called container_name.
Set ext_port using a variable called ext_port.
In variables.tf create three image_name, container_name and ext_port.

variables.tf
The image_name will have a default value of ghost:latest with a description of Image for container.
The container_name will have a default value of blogwith a description ofName of the container.  
Theext_portwill have adefaultvalue of 80 with a description of External port for container.

outputs.tf
In outputs.tf create two outputs: ip and container_name. The ip output the ghost_container's ip_address attribute.
The container_name output the ghost_container's name attribute.

Deploy the infrastructure
Initialize Terraform.
Generate a Terraform plan and output a plan file.
Deploy the infrastructure using the plan file.

Sol>

mkdir modules
mkdir ghost
vi main.tf
resource "docker_image" "ghost_image" {
	name = "${var.image_name}"
}

resource "docker_container" "ghost_container"{
  name  = "${var.container_name}"
  image = "${docker_image.ghost_image.latest}"
  ports {
    internal = "${var.int_port}"
    external = "${var.ext_port}"
}
}


vi variables.tf
variable "image_name" {
  description = "Image for container."
  default     = "ghost:latest"
}
variable "container_name" {
  description = "Name of the container."
  default     = "ghost_blog"
}
variable "int_port" {
  description = "Internal port for container."
  default     = "2368"

variable "ext_port" {
  description = "External port for container."
  default     = "80"
}

vi outputs.tf
output "ip_address" {
  value       = "${docker_container.ghost_container.ip_address}"
  description = "ghost_container's ip_address"
}

output "container_name" {
  value       = "${docker_container.ghost_container.name}"
  description = "ghost_container's name"
}

mkdir modules

cd terraform/modules/

touch {main.tf,variables.tf,outputs.tf}

cd ~/terraform/basics/modules/
touch {main.tf,variables.tf,outputs.tf}
Edit main.tf:

vi main.tf

module "ghost" {
  source = "./ghost"
  image_name  = "${var.image_name}"
  container_name = "${var.container_name}"
  ext_port = "${var.ext_port}"
}

vi variables.tf
variable "container_name" {
  description = "Name of the container."
  default     = "myblog"
}
variable "image_name" {
  description = "Image for container."
  default     = "ghost:latest"
}
variable "int_port" {
  description = "Internal port for container."
  default     = "2368"
}
variable "ext_port" {
  description = "External port for container."
  default     = "80"
}


vi outputs.tf
output "ip_address" {
  value       = "${module.ghost.ip_address}"
  description = "The IP for the container."
}

output "container_name" {
  value       = "${module.ghost.container_name}"
  description = "The name of the container."
}
terraform init
Create the image plan:

terraform plan -out=ghost1.tfplan

terraform apply ghost1.tfplan